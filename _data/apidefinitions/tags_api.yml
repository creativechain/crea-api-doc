# Generated by Scrape::ApiDefinitionsJob: 2018-09-25 01:15:43 UTC
# See: https://git.io/vx5CY
---
- name: Tags API
  description: Used to lookup information about tags, posts, and discussions. **These
    AppBase API methods are still under development and subject to change.**
  methods:
  - api_method: tags_api.get_active_votes
    purpose: Returns all votes for the given post.
    parameter_json: '{"author":"","permlink":""}'
    expected_response_json: '{"votes":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_active_votes", "params":{"author":"creary",
      "permlink":"firstpost"}, "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_active_votes", "params":{"author":"alice",
      "permlink":"a-post-by-alice"}, "id":1}'
    expected_curl_responses:
    - 
    - 'unknown key:unknown key:'
  - api_method: tags_api.get_comment_discussions_by_payout
    since: HF17
    purpose: Returns a list of discussions based on payout.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_comment_discussions_by_payout", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_comment_discussions_by_payout", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_content_replies
    purpose: Returns a list of replies.
    parameter_json: '{"author":"","permlink":""}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_content_replies", "params":{"author":"creary",
      "permlink":"firstpost"}, "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_content_replies", "params":{"author":"alice",
      "permlink":"a-post-by-alice"}, "id":1}'
  - api_method: tags_api.get_discussion
    purpose: Returns the discussion given an author and permlink.
    parameter_json: '{"author":"","permlink":""}'
    expected_response_json: '{"id":0,"author":"","permlink":"","category":"","parent_author":"","parent_permlink":"","title":"","body":"","json_metadata":"","last_update":"1970-01-01T00:00:00","created":"1970-01-01T00:00:00","active":"1970-01-01T00:00:00","last_payout":"1970-01-01T00:00:00","depth":0,"children":0,"net_rshares":0,"abs_rshares":0,"vote_rshares":0,"children_abs_rshares":0,"cashout_time":"1970-01-01T00:00:00","max_cashout_time":"1970-01-01T00:00:00","total_vote_weight":0,"reward_weight":0,"total_payout_value":{"amount":"0","precision":3,"nai":"@@000000021"},"curator_payout_value":{"amount":"0","precision":3,"nai":"@@000000021"},"author_rewards":0,"net_votes":0,"root_author":"","root_permlink":"","max_accepted_payout":{"amount":"0","precision":3,"nai":"@@000000021"},"percent_crea_dollars":0,"allow_replies":false,"allow_votes":false,"allow_curation_rewards":false,"beneficiaries":[],"url":"","root_title":"","pending_payout_value":{"amount":"0","precision":3,"nai":"@@000000021"},"total_pending_payout_value":{"amount":"0","precision":3,"nai":"@@000000021"},"active_votes":[],"replies":[],"author_reputation":0,"promoted":{"amount":"0","precision":3,"nai":"@@000000013"},"body_length":0,"reblogged_by":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussion", "params":{"author":"creary",
      "permlink":"firstpost"}, "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussion", "params":{"author":"alice",
      "permlink":"a-post-by-alice"}, "id":1}'
  - api_method: tags_api.get_discussions_by_active
    purpose: Returns a list of discussions based on active.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_active", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_active", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_discussions_by_author_before_date
    purpose: Returns a list of discussions based on author before date.
    parameter_json: '{"author":"","start_permlink":"","before_date":"1970-01-01T00:00:00","limit":100}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_author_before_date",
      "params":{"author":"creary","start_permlink":"firstpost","before_date":"2016-04-19T22:49:43","limit":1},
      "id":1}'
  - api_method: tags_api.get_discussions_by_blog
    purpose: Returns a list of discussions by blog.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_blog", "params":{"tag":"creary","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_blog", "params":{"tag":"alice","limit":10},
      "id":1}'
  - api_method: tags_api.get_discussions_by_cashout
    purpose: Returns a list of discussions by cashout.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_cashout", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_cashout", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_discussions_by_children
    purpose: Returns a list of discussions by children.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_children", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_children", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_discussions_by_comments
    purpose: Returns a list of discussions by comments.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_comments", "params":{"start_author":"creary","start_permlink":"firstpost","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_comments", "params":{"start_author":"alice","start_permlink":"a-post-by-alice","limit":10,"truncate_body":0},
      "id":1}'
    expected_curl_responses:
    - 
    - Comment is not in account's comments
  - api_method: tags_api.get_discussions_by_created
    purpose: Returns a list of discussions by created.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_created", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_created", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_discussions_by_feed
    since: HF14
    purpose: Returns a list of discussions by feed.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_feed", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_feed", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_discussions_by_hot
    purpose: Returns a list of discussions by hot.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_hot", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_hot", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_discussions_by_promoted
    since: HF13
    purpose: Returns a list of discussions by promoted.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_promoted", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_promoted", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_discussions_by_trending
    purpose: Returns a list of discussions by trending.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_trending", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_trending", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_discussions_by_votes
    purpose: Returns a list of discussions by votes.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_votes", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_votes", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_post_discussions_by_payout
    since: HF17
    purpose: Returns a list of post discussions by payout.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_post_discussions_by_payout", "params":{"tag":"crea","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_post_discussions_by_payout", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
  - api_method: tags_api.get_replies_by_last_update
    purpose: Returns a list of replies by last update.
    parameter_json: '{"start_parent_author":"","start_permlink":"","limit":100}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_replies_by_last_update", "params":{"start_parent_author":"creary","start_permlink":"firstpost","limit":1},
      "id":1}'
  - api_method: tags_api.get_tags_used_by_author
    purpose: Returns a list of tags used by an author.
    parameter_json: '{"author":""}'
    expected_response_json: '{"tags":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_tags_used_by_author", "params":{"author":"creary"},
      "id":1}'
  - api_method: tags_api.get_trending_tags
    purpose: Returns the list of trending tags.
    parameter_json: '{"start_tag":"","limit":100}'
    expected_response_json: '{"tags":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_trending_tags", "params":{"start_tag":null,"limit":100},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_trending_tags", "params":{"start_tag":"crea","limit":10},
      "id":1}'
